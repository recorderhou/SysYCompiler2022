decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
    global @garr_global = alloc [i32, 10], {6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
fun @main() : i32 { 
%entry:
    @arr_main_2 = alloc [i32, 10]
    %0 = getelemptr @arr_main_2, 0
    store 1, %0
    %1 = getelemptr @arr_main_2, 1
    store 2, %1
    %2 = getelemptr @arr_main_2, 2
    store 3, %2
    %3 = getelemptr @arr_main_2, 3
    store 4, %3
    %4 = getelemptr @arr_main_2, 4
    store 5, %4
    %5 = getelemptr @arr_main_2, 5
    store 0, %5
    %6 = getelemptr @arr_main_2, 6
    store 0, %6
    %7 = getelemptr @arr_main_2, 7
    store 0, %7
    %8 = getelemptr @arr_main_2, 8
    store 0, %8
    %9 = getelemptr @arr_main_2, 9
    store 0, %9
    @i_main_2 = alloc i32
    store 0, @i_main_2
    @sum_main_2 = alloc i32
    store 0, @sum_main_2
    jump    %while_entry_0
%while_entry_0:
    %10 = load @i_main_2
    %11 = lt %10, 10
    br    %11, %while_body_0, %while_end_0
%while_body_0:
    %12 = load @i_main_2
    %arr_main_2_ptr_0 = getelemptr @arr_main_2, %12
    %13 = load @sum_main_2
    %14 = load %arr_main_2_ptr_0
    %15 = add %13, %14
    %16 = load @i_main_2
    %garr_global_ptr_1 = getelemptr @garr_global, %16
    %17 = load %garr_global_ptr_1
    %18 = add %15, %17
    store %18, @sum_main_2
    %19 = load @i_main_2
    %20 = add %19, 1
    store %20, @i_main_2
    jump    %while_entry_0
%while_end_0:
    %21 = load @sum_main_2
    ret %21
}

